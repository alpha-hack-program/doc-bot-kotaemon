kind: Deployment
apiVersion: apps/v1
metadata:
  annotations:
    argocd.argoproj.io/sync-wave: "1"
    alpha.image.policy.openshift.io/resolve-names: '*'
    app.openshift.io/route-disabled: 'false'
    app.openshift.io/vcs-uri: '{{ .Values.vcs.uri }}'
    app.openshift.io/vcs-ref: '{{ .Values.vcs.ref }}'
    image.openshift.io/triggers: '[{"from":{"kind":"ImageStreamTag","name":"kotaemon:latest","namespace":"{{ .Values.dataScienceProjectNamespace }}"},"fieldPath":"spec.template.spec.containers[?(@.name==\"kotaemon\")].image","pause":"false"}]'
  name: kotaemon
  namespace: {{ .Values.dataScienceProjectNamespace }}
  labels:
    app: kotaemon
    app.kubernetes.io/component: kotaemon
    app.kubernetes.io/instance: kotaemon
    app.kubernetes.io/name: kotaemon
    app.kubernetes.io/part-of: chatbots
    app.openshift.io/runtime: python
    app.openshift.io/runtime-version: {{ .Values.pythonVersion }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kotaemon
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: kotaemon
        deployment: kotaemon
    spec:
      serviceAccountName: kotaemon
      containers:
        - name: kotaemon
          image: >-
            image-registry.openshift-image-registry.svc:5000/{{ .Values.dataScienceProjectNamespace }}/kotaemon:latest
          ports:
            - name: http
              containerPort: 7860
              protocol: TCP
          envFrom:
            - secretRef:
                name: kotaemon-secret
            - configMapRef:
                name: kotaemon-config
            - configMapRef:
                name: kotaemon-prompts
          volumeMounts:
            - name: kotaemon-env-volume
              mountPath: /app/.env
              subPath: .env
            - name: kotaemon-data-volume
              mountPath: {{ .Values.kotaemonPvcMountPath }}
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          imagePullPolicy: Always
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      dnsPolicy: ClusterFirst
      securityContext: {}
      schedulerName: default-scheduler
      volumes:
        - name: kotaemon-env-volume
          secret:
            secretName: kotaemon-env
            items:
              - key: .env
                path: .env
        - name: kotaemon-data-volume
          persistentVolumeClaim:
            claimName: kotaemon-pvc
  strategy:
    type: Recreate
  revisionHistoryLimit: 10
  progressDeadlineSeconds: 600
---
kind: Service
apiVersion: v1
metadata:
  name: kotaemon
  namespace: {{ .Values.dataScienceProjectNamespace }}
  labels:
    app: kotaemon
    app.kubernetes.io/component: kotaemon
    app.kubernetes.io/instance: kotaemon
    app.kubernetes.io/name: kotaemon
    app.kubernetes.io/part-of: chatbots
    app.openshift.io/runtime: python
    app.openshift.io/runtime-version: {{ .Values.pythonVersion }}
  annotations:
    app.openshift.io/vcs-uri: '{{ .Values.vcs.uri }}'
    app.openshift.io/vcs-ref: '{{ .Values.vcs.ref }}'
spec:
  ipFamilies:
    - IPv4
  ports:
    - name: 7860-tcp
      protocol: TCP
      port: 7860
      targetPort: 7860
  internalTrafficPolicy: Cluster
  type: ClusterIP
  ipFamilyPolicy: SingleStack
  sessionAffinity: None
  selector:
    app: kotaemon
    deployment: kotaemon
---
kind: Route
apiVersion: route.openshift.io/v1
metadata:
  name: kotaemon
  namespace: {{ .Values.dataScienceProjectNamespace }}
  labels:
    app: kotaemon
    app.kubernetes.io/component: kotaemon
    app.kubernetes.io/instance: kotaemon
    app.kubernetes.io/name: kotaemon
    app.kubernetes.io/part-of: chatbots
    app.openshift.io/runtime: python
    app.openshift.io/runtime-version: {{ .Values.pythonVersion }}
spec:
  to:
    kind: Service
    name: kotaemon
    weight: 100
  port:
    targetPort: 7860-tcp
  tls:
    termination: edge
    insecureEdgeTerminationPolicy: Redirect
  wildcardPolicy: None